{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\netflix clone\\\\streamup_frontend\\\\src\\\\Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst posterBaseUrl = \"https://image.tmdb.org/t/p/original/\";\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n  const [movies, setMovies] = useState([]);\n\n  //getting url\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      // console.log(request);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  // console.log(movies);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${posterBaseUrl}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","axios","YouTube","jsxDEV","_jsxDEV","posterBaseUrl","Row","title","fetchUrl","isLargeRow","_s","movies","setMovies","fetchData","request","get","data","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","src","poster_path","backdrop_path","alt","name","id","videoId","trailerUrl","opts","_c","$RefreshReg$"],"sources":["D:/projects/netflix clone/streamup_frontend/src/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from './axios';\nimport \"./Row.css\"\nimport YouTube from 'react-youtube';\n\nconst posterBaseUrl=\"https://image.tmdb.org/t/p/original/\";\nfunction Row({title,fetchUrl,isLargeRow}) {\n    const [movies, setMovies]=useState([]);\n    \n    //getting url\n    useEffect(()=>{\n        async function fetchData() {\n            const request=await axios.get(fetchUrl);\n            // console.log(request);\n            setMovies(request.data.results);\n            return request;     \n        }\n        fetchData();\n    },[fetchUrl]);\n\n    // console.log(movies);\n\n  return (\n    <div className=\"row\"> \n        <h4>{title}</h4>\n        <div className=\"posters\" >\n            {\n                movies.map(movie=>(\n                    <img \n                    key={movie.id}\n                    className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n\n                     src={`${posterBaseUrl}${isLargeRow?movie.poster_path:movie.backdrop_path}`} alt={movie.name}/>\n                ))\n            }\n\n        </div>\n        <YouTube videoId={trailerUrl} opts={opts}/>\n         \n      \n    </div>\n  )\n}\n\nexport default Row\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAC,sCAAsC;AAC1D,SAASC,GAAGA,CAAC;EAACC,KAAK;EAACC,QAAQ;EAACC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAACZ,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAD,SAAS,CAAC,MAAI;IACV,eAAec,SAASA,CAAA,EAAG;MACvB,MAAMC,OAAO,GAAC,MAAMb,KAAK,CAACc,GAAG,CAACP,QAAQ,CAAC;MACvC;MACAI,SAAS,CAACE,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IAClB;IACAD,SAAS,CAAC,CAAC;EACf,CAAC,EAAC,CAACL,QAAQ,CAAC,CAAC;;EAEb;;EAEF,oBACEJ,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBf,OAAA;MAAAe,QAAA,EAAKZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBnB,OAAA;MAAKc,SAAS,EAAC,SAAS;MAAAC,QAAA,EAEhBR,MAAM,CAACa,GAAG,CAACC,KAAK,iBACZrB,OAAA;QAEAc,SAAS,EAAE,eAAeT,UAAU,IAAI,kBAAkB,EAAG;QAE5DiB,GAAG,EAAE,GAAGrB,aAAa,GAAGI,UAAU,GAACgB,KAAK,CAACE,WAAW,GAACF,KAAK,CAACG,aAAa,EAAG;QAACC,GAAG,EAAEJ,KAAK,CAACK;MAAK,GAHxFL,KAAK,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGiF,CACjG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGL,CAAC,eACNnB,OAAA,CAACF,OAAO;MAAC8B,OAAO,EAAEC,UAAW;MAACC,IAAI,EAAEA;IAAK;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG1C,CAAC;AAEV;AAACb,EAAA,CApCQJ,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAsCZ,eAAeA,GAAG;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}